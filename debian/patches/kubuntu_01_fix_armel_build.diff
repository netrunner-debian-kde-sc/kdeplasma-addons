Index: kdeplasma-addons-4.3.1/applets/pastebin/pastebin.cpp
===================================================================
--- kdeplasma-addons-4.3.1.orig/applets/pastebin/pastebin.cpp	2009-09-02 23:48:32.000000000 -0400
+++ kdeplasma-addons-4.3.1/applets/pastebin/pastebin.cpp	2009-09-07 12:26:17.000000000 -0400
@@ -253,7 +253,7 @@
 {
     if (constraints & (Plasma::FormFactorConstraint | Plasma::SizeConstraint)) {
         int minSize = KGlobalSettings::smallestReadableFont().pointSize();
-        int dynSize = qMax(1.0, qMin(contentsRect().width(), contentsRect().height()) / 4);
+        int dynSize = qMax((qreal)1.0, (qreal)(qMin(contentsRect().width(), contentsRect().height()) / 4));
         //kDebug() << "Min : Dyn" << minSize << dynSize << qMax(minSize, dynSize);
         m_font.setPointSize(qMax(minSize, dynSize));
     }
Index: kdeplasma-addons-4.3.1/applets/mediaplayer/mediaplayer.cpp
===================================================================
--- kdeplasma-addons-4.3.1.orig/applets/mediaplayer/mediaplayer.cpp	2009-09-02 23:48:32.000000000 -0400
+++ kdeplasma-addons-4.3.1/applets/mediaplayer/mediaplayer.cpp	2009-09-07 12:26:17.000000000 -0400
@@ -223,10 +223,10 @@
         PlayPause();
         break;
     case Qt::Key_Up:
-        audio->setVolume(qMin(qreal(1.0), audio->volume() + 0.1));
+        audio->setVolume(qMin(qreal(1.0), (qreal)(audio->volume() + 0.1)));
         break;
     case Qt::Key_Down:
-        audio->setVolume(qMax(qreal(0.0), audio->volume() - 0.1));
+        audio->setVolume(qMax(qreal(0.0), (qreal)(audio->volume() - 0.1)));
         break;
     case Qt::Key_R:
         RaiseLower();
Index: kdeplasma-addons-4.3.1/wallpapers/mandelbrot/mandelbrot.cpp
===================================================================
--- kdeplasma-addons-4.3.1.orig/wallpapers/mandelbrot/mandelbrot.cpp	2009-09-07 12:26:41.000000000 -0400
+++ kdeplasma-addons-4.3.1/wallpapers/mandelbrot/mandelbrot.cpp	2009-09-07 12:29:03.000000000 -0400
@@ -340,16 +340,16 @@
     m_center += (oldResolution - newResolution) * (at - QPointF(width()/2, height()/2));
 
     // now scale part the old image and merge it immediately into m_image to give the user a sense of speed
-    qreal srcwidth = width() * qMin(zoomFactor,1.);
-    qreal srcheight = height() * qMin(zoomFactor,1.);
+    qreal srcwidth = width() * qMin(zoomFactor,(qreal)(1.0));
+    qreal srcheight = height() * qMin(zoomFactor,(qreal)(1.0));
     qreal srcleft = at.x() - srcwidth/2.;
     qreal srcright = at.x() + srcwidth/2.;
     qreal srctop = at.y() - srcheight/2.;
     qreal srcbottom = at.y() + srcheight/2.;
-    qreal srcleft_c = CLAMP(srcleft, 0., (qreal)width());
-    qreal srcright_c = CLAMP(srcright, 0., (qreal)width());
-    qreal srctop_c = CLAMP(srctop, 0., (qreal)height());
-    qreal srcbottom_c = CLAMP(srcbottom, 0., (qreal)height());
+    qreal srcleft_c = CLAMP(srcleft, (qreal)(0.0), (qreal)width());
+    qreal srcright_c = CLAMP(srcright, (qreal)(0.0), (qreal)width());
+    qreal srctop_c = CLAMP(srctop, (qreal)(0.0), (qreal)height());
+    qreal srcbottom_c = CLAMP(srcbottom, (qreal)(0.0), (qreal)height());
     qreal srcwidth_c = srcright_c - srcleft_c;
     qreal srcheight_c = srcbottom_c - srctop_c;
     qreal dstwidth = width() * qMin(1./zoomFactor,1.);
