Index: kdeplasma-addons-4.4.90/applets/microblog/microblog.cpp
===================================================================
--- kdeplasma-addons-4.4.90.orig/applets/microblog/microblog.cpp	2010-05-27 19:24:02.000000000 +0200
+++ kdeplasma-addons-4.4.90/applets/microblog/microblog.cpp	2010-06-26 00:08:46.530645529 +0200
@@ -27,6 +27,8 @@
 #include <QGraphicsAnchorLayout>
 #include <QAction>
 #include <QTimer>
+#include <QFile>
+
 
 #include <KColorScheme>
 #include <KConfigDialog>
@@ -164,7 +166,7 @@
     m_serviceUrl = cg.readEntry("serviceUrl", "https://identi.ca/api/");
     m_username = cg.readEntry("username");
     m_password = KStringHandler::obscure(cg.readEntry("password"));
-    m_historySize = cg.readEntry("historySize", 6);
+    m_historySize = cg.readEntry("historySize", 10);
     m_historyRefresh = cg.readEntry("historyRefresh", 5);
     m_includeFriends = cg.readEntry("includeFriends", true);
 
@@ -261,6 +263,7 @@
     //set things in motion
     if (m_username.isEmpty()) {
         setAuthRequired(true);
+	downloadHistory();
     } else if (m_password.isEmpty()) {
         kDebug() << "started, password is not in config file, trying wallet";
         m_walletWait = Read;
@@ -351,7 +354,9 @@
     } else if (m_password.isEmpty()) {
         //FIXME: when out of string freeze, tell the user WHY they need
         //       to configure the widget;
-        setConfigurationRequired(true);
+        if (!QFile::exists("/usr/bin/ubiquity")) { //don't show on live CD
+	  setConfigurationRequired(true);
+	}
         kDebug() << "failed to read password";
     }
 
@@ -376,7 +381,9 @@
 
 void MicroBlog::setAuthRequired(bool required)
 {
-    setConfigurationRequired(required);
+    if (!QFile::exists("/usr/bin/ubiquity")) {
+      setConfigurationRequired(required);
+    }
     m_statusEdit->setEnabled(!required);
 }
 
@@ -760,12 +767,20 @@
 void MicroBlog::downloadHistory()
 {
     //kDebug() ;
-    if (m_username.isEmpty() || m_password.isEmpty()) {
+
+   if (m_username.isEmpty() || m_password.isEmpty()) {
+     /*
         if (!m_curTimeline.isEmpty()) {
             m_engine->disconnectSource(m_curTimeline, this);
             m_engine->disconnectSource("Error:" + m_curTimeline, this);
         }
         return;
+	*/
+
+	m_username = "kubuntu"; //default to show when unconfigured
+	m_headerFrame->hide();
+   } else {
+     m_headerFrame->show();
     }
 
     m_flash->flash(i18n("Refreshing timeline..."), -1);
@@ -778,7 +793,9 @@
 
         if (m_service) {
             KConfigGroup cg = m_service->operationDescription("auth");
-            cg.writeEntry("password", m_password);
+            if (!m_password.isEmpty()) {
+                cg.writeEntry("password", m_password);
+            }
             m_service->startOperationCall(cg);
         }
     }
@@ -818,8 +835,10 @@
         query = "Replies:%1@%2";
         break;
     default:
-        if(m_includeFriends) {
-            query = QString("TimelineWithFriends:%1@%2");
+        if (m_password.isEmpty()) {
+            query = QString("NoAuth:%1@%2");
+	} else if (m_includeFriends) {
+	    query = QString("TimelineWithFriends:%1@%2");
         } else {
             query = QString("Timeline:%1@%2");
         }
Index: kdeplasma-addons-4.4.90/dataengines/microblog/timelinesource.cpp
===================================================================
--- kdeplasma-addons-4.4.90.orig/dataengines/microblog/timelinesource.cpp	2010-06-24 18:32:17.000000000 +0200
+++ kdeplasma-addons-4.4.90/dataengines/microblog/timelinesource.cpp	2010-06-26 00:10:42.942095727 +0200
@@ -118,6 +118,9 @@
     case TimelineWithFriends:
         m_url = KUrl(m_serviceBaseUrl, "statuses/friends_timeline.xml");
         break;
+    case NoAuth:
+	m_url = KUrl(m_serviceBaseUrl, QString("statuses/user_timeline/%1.xml").arg(account.at(0)));
+	break;
     case Timeline:
     default:
         m_url = KUrl(m_serviceBaseUrl, "statuses/user_timeline.xml");
@@ -201,7 +204,7 @@
 
 void TimelineSource::update(bool forcedUpdate)
 {
-    if (m_job || (!account().isEmpty() && password().isEmpty() && !m_oauthToken.size())) {
+    if ( account() != "kubuntu" && (m_job || (!account().isEmpty() && password().isEmpty() && !m_oauthToken.size())) ) {
         // We are already performing a fetch, let's not bother starting over
         //kDebug() << "already updating....." << m_job << account().isEmpty() << password().isEmpty();
         return;
Index: kdeplasma-addons-4.4.90/dataengines/microblog/timelinesource.h
===================================================================
--- kdeplasma-addons-4.4.90.orig/dataengines/microblog/timelinesource.h	2010-06-24 18:32:17.000000000 +0200
+++ kdeplasma-addons-4.4.90/dataengines/microblog/timelinesource.h	2010-06-26 00:08:46.530645529 +0200
@@ -82,7 +82,8 @@
         TimelineWithFriends,
         Replies,
         DirectMessages,
-        Profile
+        Profile,
+	NoAuth
     };
 
     TimelineSource(const QString &who, RequestType requestType, QObject* parent);
Index: kdeplasma-addons-4.4.90/dataengines/microblog/twitterengine.cpp
===================================================================
--- kdeplasma-addons-4.4.90.orig/dataengines/microblog/twitterengine.cpp	2009-08-12 12:00:01.000000000 +0200
+++ kdeplasma-addons-4.4.90/dataengines/microblog/twitterengine.cpp	2010-06-26 00:08:46.530645529 +0200
@@ -30,6 +30,7 @@
 const QString TwitterEngine::timelinePrefix("Timeline:");
 const QString TwitterEngine::timelineWithFriendsPrefix("TimelineWithFriends:");
 const QString TwitterEngine::profilePrefix("Profile:");
+const QString TwitterEngine::noauthPrefix("NoAuth:");
 const QString TwitterEngine::repliesPrefix("Replies:");
 const QString TwitterEngine::messagesPrefix("Messages:");
 
@@ -53,7 +54,7 @@
 
     if (!name.startsWith(timelinePrefix) && !name.startsWith(timelineWithFriendsPrefix)
         && !name.startsWith(profilePrefix) && !name.startsWith(repliesPrefix)
-        && !name.startsWith(messagesPrefix)) {
+        && !name.startsWith(messagesPrefix) && !name.startsWith(noauthPrefix)) {
         return false;
     }
 
@@ -81,11 +82,10 @@
 //always returns false because everything is async
 bool TwitterEngine::updateSourceEvent(const QString &name)
 {
-    //kDebug() << name;
     //right now it only makes sense to do an update on timelines
     if (!name.startsWith(timelinePrefix) && !name.startsWith(timelineWithFriendsPrefix)
         && !name.startsWith(profilePrefix) && !name.startsWith(repliesPrefix)
-        && !name.startsWith(messagesPrefix)) {
+        && !name.startsWith(messagesPrefix) && !name.startsWith(noauthPrefix)) {
         return false;
     }
 
@@ -98,6 +98,9 @@
     } else if (name.startsWith(profilePrefix)) {
         requestType = TimelineSource::Profile;
         who.remove(profilePrefix);
+    } else if (name.startsWith(noauthPrefix)) {
+      requestType = TimelineSource::NoAuth;
+      who.remove(noauthPrefix);
     } else if (name.startsWith(repliesPrefix)) {
         requestType = TimelineSource::Replies;
         who.remove(repliesPrefix);
Index: kdeplasma-addons-4.4.90/dataengines/microblog/twitterengine.h
===================================================================
--- kdeplasma-addons-4.4.90.orig/dataengines/microblog/twitterengine.h	2009-08-12 12:00:01.000000000 +0200
+++ kdeplasma-addons-4.4.90/dataengines/microblog/twitterengine.h	2010-06-26 00:08:46.530645529 +0200
@@ -67,6 +67,7 @@
         static const QString timelinePrefix;
         static const QString timelineWithFriendsPrefix;
         static const QString profilePrefix;
+	static const QString noauthPrefix;
         static const QString repliesPrefix;
         static const QString messagesPrefix;
         ImageSource *m_imageSource;
